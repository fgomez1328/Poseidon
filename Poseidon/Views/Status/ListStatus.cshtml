<style type="text/css" media="screen">
    .k-i-excel {
        background-image: url('../Content/images/table_excel.png');
        background-size: 20px 20px;

        background-position: left;
        background-repeat: no-repeat;
    }

    .pdf {
        background-image: url('../Content/images/30x30-pdf-icon.png');
        background-size: 20px 20px;
        background-position: left;
        background-repeat: no-repeat;
    }
</style>


@model IEnumerable<dynamic>

@{
    ViewBag.Title = "INSTALACIONES";
}

<link href="@Url.Content("~/Content/List.css")" rel="stylesheet" type="text/css" />
<h2>Logger Creados</h2>

@(Html.Kendo().Button()
        .Name("linkButton")
        .Tag("a")
        .Content("Create")
        .Events(e =>
        {
            e.Click("ClickCreate");
        })
)

<div id="gridv" class="grid">
    @(Html.Kendo().Grid<Poseidon.Models.Logger>()
        .Name("grid")
        .ToolBar(tools => tools.Excel().HtmlAttributes(new { @class = "k-i-excel", @style = "width:150px;height:30px" }))
        .Excel(excel => excel
                .AllPages(true)
                .ProxyURL(Url.Action("Excel_Export_Save", "Task"))
            )
        .ToolBar(tools => tools.Pdf().HtmlAttributes(new { @class = "pdf", @style = "width:150px;height:30px" }))
        .Pdf(pdf => pdf
        .FileName("ListStatus.pdf")
        .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
        )
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(c =>
        {
            c.Id("logger_id");
            c.Field("logger_sites_name", typeof(string));
            c.Field("zone_id", typeof(int));
            c.Field("zone_name", typeof(string));
            c.Field("instalation_type", typeof(string));
            c.Field("status", typeof(string));

        })

        .Read(read => read.Action("ReadStatus", "Status"))
                .Sort(a => a.Add("zone_name").Descending())
        )
        .Columns(columns =>
        {
            columns.Bound("logger_sites_name").Title("Nombre Sitio");
            columns.Bound("zone_name").Title("Localidad");
            columns.Bound("status").Title("Estado").Filterable(false);
            columns.Command(c =>
            {
                c.Custom("Detalle").Click("ViewDetail");

            });

        })
        .Editable(editable => editable.TemplateName("ProductItem").Mode(GridEditMode.PopUp))
        .Events(e => e.DataBound("onDataBound"))
        .Sortable()
        
        .HtmlAttributes(new { style = "font-size:12px" })
        .Pageable()
        .Filterable(filterable => filterable
        .Extra(false))

    )

</div>

<div id="gridv" class="gridDivReady">

    <h2>Lista de Estado</h2>
    @(Html.Kendo().Grid<Poseidon.Models.Logger>()
        .Name("gridReady")
        .ToolBar(tools => tools.Excel().HtmlAttributes(new { @class = "k-i-excel", @style = "width:150px;height:30px" }))
        .Excel(excel => excel
                .AllPages(true)
                .ProxyURL(Url.Action("Excel_Export_Save", "Task"))
        )
        .ToolBar(tools => tools.Pdf().HtmlAttributes(new { @class = "pdf", @style = "width:150px;height:30px" }))
        .Pdf(pdf => pdf
            .FileName("ListStatus.pdf")
            .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
        )
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(c =>
        {
            c.Id("logger_id");
            c.Field("logger_sms", typeof(int));
            c.Field("logger_sites_name", typeof(string));
            c.Field("zone_id", typeof(int));
            c.Field("zone_name", typeof(string));
            c.Field("status", typeof(string));
            c.Field("user_instalation_start_date", typeof(DateTime));
            c.Field("user_instalation_end_date", typeof(DateTime));
            c.Field("user_instalation", typeof(string));
            c.Field("approval_date", typeof(DateTime));

        })
                        .Read(read => read.Action("ReadStatusOther", "Status"))
                        .Sort(a => a.Add("status").Ascending())
                        .PageSize(20)
        )
        .Columns(columns =>
        {
            columns.Bound("logger_sites_name").Title("Nombre Sitio");
            columns.Bound("zone_name").Width("190").Title("Localidad");
            columns.Bound("status").Title("Estado");
            columns.Bound("user_instalation").Title("Instalador");
            columns.Bound("user_instalation_start_date").Title("Inicio Instalación").Format("{0:dd/MM/yyyy HH:mm:ss}"); 
            columns.Bound("user_instalation_end_date").Title("Termino Instalación").Format("{0:dd/MM/yyyy HH:mm:ss}");

            columns.Bound("approval_date").Title("Fecha aprobación").Format("{0:dd/MM/yyyy HH:mm:ss}"); 
            columns.Command(command =>
                    {
                        command.Custom("View").Click("ViewDetailStatus");
                        command.Custom("Aprobar").Click("Aprobar");

                    });


        })
        .HtmlAttributes(new { style = "font-size:10px" })
        .Sortable()

        .Events(e => e.DataBound("onDataBound2"))
        .Filterable(filterable => filterable
        .Extra(false))
        .Pageable(pageable => pageable
        .Refresh(true)
                .PageSizes(true)
        
        .ButtonCount(5))


    )

</div>



<script type="text/javascript">

    var detailsTemplate = kendo.template($("#template").html());

    function ClickCreate(e) {
        window.location.href = "@Url.Action("Create")";
    }

    function onDataBound(e) {
        var grid = $("#grid").data("kendoGrid");

        var gridData = grid.dataSource.view();
        var data = grid.dataSource.data();

        $(data).each(function (i, row) {
            var uno = "Pendiente";
            var dos = "En ejecución";
            var tres = "Instalado";
            var cuatro = "Aprobado";

            // set on dataItem
            var currenvalue = this.status;


            if (currenvalue == "1")
                this.set("status", uno)
            else if (currenvalue == "2")
                this.set("status", dos)
            else if (currenvalue == 3) {
                this.set("status", tres)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("background-color", "yellow");
            } else if (currenvalue == 4)
                this.set("status", cuatro)

            var currenkey = this.necessary_key;
            var no = "No";
            var yes = "Si";
            if (currenkey == "false")
                this.set("necessary_key", no)
            else if (currenkey == "true")
                this.set("necessary_key", yes)

        });


    }

    function ViewDetail(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("PreviewLoggerFree", "Status")?logger_id=" + stockReceiptId;
    }

    function onDataBound2(e) {
        var grid = $("#gridReady").data("kendoGrid");

        var gridData = grid.dataSource.view();
        var data = grid.dataSource.data();

        $(data).each(function (i, row) {
            var uno = "Pendiente";
            var dos = "En ejecución";
            var tres = "Instalado";
            var cuatro = "Aprobado";
            var cinco = "No Conectado";
            var seis = "No Instalado";

            // set on dataItem
            var currenvalue = this.status;
            var currentUid = gridData[i].uid;
            var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
            var editButton = $(currenRow).find(".k-grid-Aprobar");
            var verButton = $(currenRow).find(".k-grid-View");

            if (currenvalue == "1") {
                this.set("status", uno);

            } else if (currenvalue == "2") {
                this.set("status", dos)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "brown");

            } else if (currenvalue == 3) {
                this.set("status", tres)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "blue");

            } else if (currenvalue == 4) {
                    this.set("status", cuatro)
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "green");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "green");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "green");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "green");
            } 
            else if (currenvalue == 5) {
                    this.set("status", cinco)
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "Orange");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "Orange");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "Orange");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "Orange");

            }
            else if (currenvalue == 6) {
                    this.set("status", seis)
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "Red");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "Red");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "Red");
                    $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "Red");
            }

            //OCULTA BOTON APROBAR
            if (currenvalue == cuatro || currenvalue == cinco || currenvalue == seis) {
                editButton.hide();
               
            }
            if (currenvalue == dos) {
                editButton.hide();
                verButton.hide();
            }
            if (currenvalue == tres) {
                verButton.hide();
            }



        });


    }

    function ViewDetailStatus(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("DetailInstalation", "Status")?logger_id=" + stockReceiptId;
    }

    function Aprobar(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("LoggerApprove", "Status")?logger_id=" + stockReceiptId;
    }

</script>