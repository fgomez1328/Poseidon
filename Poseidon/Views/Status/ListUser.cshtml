@{
    ViewBag.Title = "INSTALACIONES";
}

<h2>Lista Disponibles para Agendar</h2>

<div id="clientsDb">
    @(Html.Kendo().Grid<Poseidon.Models.Logger>()
        .Name("gridFree")
        .ToolBar(tools => tools.Excel().HtmlAttributes(new { @class = "k-i-excel", @style = "width:150px;height:30px" }))
        .Excel(excel => excel
               .FileName("Kendo UI Grid Export.xlsx")
               .Filterable(true)
               .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
        )
        .ToolBar(tools => tools.Pdf().HtmlAttributes(new { @class = "pdf", @style = "width:150px;height:35px" }))
        .Pdf(pdf => pdf
            .FileName("ListUser.pdf")
            .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
        )
        .Columns(columns =>
        {
            columns.Bound("logger_sites_name").Title("Nombre Sitio");

            columns.Bound("zone_name").Width("190").Title("Localidad");
            columns.Bound("necessary_key").Width(110).Title("Necesario llaves").Filterable(false);
            columns.Bound("contact_detail").Width(110).Title("Detalle contacto");


        })
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(c =>
        {
            c.Id("logger_id");
            c.Field("logger_sms", typeof(int));
            c.Field("logger_sites_name", typeof(string));
            c.Field("zone_id", typeof(int));
            c.Field("zone_name", typeof(string));
            c.Field("necessary_key", typeof(string));
            c.Field("contact_detail", typeof(string));

        })
        .Read(read => read.Action("Read", "Status"))
        )

        .HtmlAttributes(new { style = "font-size:12px" })
        .Sortable()
        .Events(e => e.DataBound("onDataBound"))

        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Selectable(select => select.Mode(GridSelectionMode.Multiple))
        .Filterable(filterable => filterable
           .Extra(false))

    )
    @Html.Label("Seleccione los logger a agendar, Ocupe la tecla ctrl para seleccionar más de uno")
    @(Html.Kendo().Button()
        .Name("linkButton")
        .Tag("a")
        .Content("Agendar")
        .Events(e =>
        {
            e.Click("ClickCreate");
        })
    )

</div>


<h2>Lista Instalaciones en Progreso</h2>
<div id="gridinstalando">
    @(Html.Kendo().Grid<Poseidon.Models.Logger>()
        .Name("gridProgress")
        .ToolBar(tools => tools.Excel().HtmlAttributes(new { @class = "k-i-excel", @style = "width:150px;height:30px" }))
        .Excel(excel => excel
                .FileName("Kendo UI Grid Export.xlsx")
                .Filterable(true)
                .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
        )
        .ToolBar(tools => tools.Pdf().HtmlAttributes(new { @class = "pdf", @style = "width:150px;height:35px" }))
        .Pdf(pdf => pdf
            .FileName("ListUser.pdf")
            .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
        )
        .Columns(columns =>
        {
            columns.Bound("logger_sites_name").Title("Nombre Sitio");
            columns.Bound("user_instalation").Title("Instalador");
            columns.Bound("zone_name").Width("190").Title("Localidad");
            columns.Bound("user_instalation_start_date").Title("Fecha Inicio instalación").Format("{0:dd/MM/yyyy HH:mm}").Filterable(false).ToString();
            columns.Command(c => c.Custom("Actualizar").Click("UpdateLogger"));

        })
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(c =>
        {
            c.Id("logger_id");
            c.Field("user_instalation", typeof(string));
            c.Field("logger_sites_name", typeof(string));
            c.Field("zone_id", typeof(int));
            c.Field("zone_name", typeof(string));
            c.Field("user_instalation_start_date", typeof(DateTime));



        })
        .Read(read => read.Action("ReadProgress", "Status"))
        )

        .HtmlAttributes(new { style = "font-size:12px" })
        .Sortable()
        .Events(e => e.DataBound("onDataBoundProgress"))

        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))

        .Filterable(filterable => filterable
           .Extra(false))

    )

</div>



<div>
    <h2>Lista Terminados</h2>

    @(Html.Kendo().Grid<Poseidon.Models.Logger>()
        .Name("gridReady")
        .ToolBar(tools => tools.Excel().HtmlAttributes(new { @class = "k-i-excel", @style = "width:150px;height:30px" }))
        .Excel(excel => excel
                .FileName("Kendo UI Grid Export.xlsx")
                .Filterable(true)
                .ProxyURL(Url.Action("Excel_Export_Save", "Grid"))
        )
        .ToolBar(tools => tools.Pdf().HtmlAttributes(new { @class = "pdf", @style = "width:150px;height:35px" }))
        .Pdf(pdf => pdf
            .FileName("ListUser.pdf")
            .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
        )
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(c =>
        {
            c.Id("logger_id");
            c.Field("logger_sms", typeof(int));
            c.Field("logger_sites_name", typeof(string));
            c.Field("zone_id", typeof(int));
            c.Field("zone_name", typeof(string));
            c.Field("status", typeof(string));
            c.Field("user_instalation_start_date", typeof(DateTime));
            c.Field("user_instalation_end_date", typeof(DateTime));
            c.Field("instalation_user", typeof(string));
            c.Field("approval_date", typeof(DateTime));

        })
                .Read(read => read.Action("OtherData", "Status"))
                .Sort(a => a.Add("status").Ascending())
        )
        .Columns(columns =>
        {
            columns.Bound("logger_sites_name").Title("Nombre Sitio");
            //columns.Bound("logger_sms").Title("SMS");
            columns.Bound("zone_name").Width("190").Title("Localidad");
            columns.Bound("status").Title("Estado").Filterable(false);
            columns.Bound("user_instalation_start_date").Title("Inicio Instalación").Format("{0:dd/MM/yyyy HH:mm}").Filterable(false);
            columns.Bound("user_instalation_end_date").Title("Termino Instalación").Format("{0:dd/MM/yyyy HH:mm}").Filterable(false);
            columns.Bound("instalation_user").Title("Instalado por").Filterable(false);
            columns.Bound("approval_date").Title("Fecha aprobación").Format("{0:dd/MM/yyyy HH:mm}").Filterable(false);
            columns.Command(c =>
                    {
                        c.Custom("Ver").Click("LoggerView");
                            c.Custom("Actualizar").Click("InstalationUpdate");
                    });
            })

                    
        .HtmlAttributes(new { style = "font-size:12px" })
        .Sortable()
        .Events(e => e.DataBound("onDataBound2"))

        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Filterable(filterable => filterable
          .Extra(false))


    )
</div>

<script type="text/javascript">


    function ClickCreate(e) {
        var grid = $("#gridFree").data("kendoGrid");
        var selectedRows = grid.select();

        var selectedDataItems = $.map(selectedRows, function (row) {
            return grid.dataItem(row);
        });
        var selectedProductNames = $.map(selectedDataItems, function (dataItem) {
            return dataItem.logger_id;
        });

        // display the ProductName field of the selected data items
        if (selectedProductNames.length > 0) {
            $("#labeltest").text(selectedProductNames.join(", "));
            window.location.href = "@Url.Action("PreviewInstalation", "Status")?ID=" + selectedProductNames.join(",");
        } else {
            alert("No seleccionó ningún Logger");
        }


    }

    function onDataBound(e) {
        var grid = $("#gridFree").data("kendoGrid");

        var gridData = grid.dataSource.view();
        var data = grid.dataSource.data();

        $(data).each(function (i, row) {
            var uno = "Pendiente";
            var dos = "En ejecución";
            var tres = "Instalado";
            var cuatro = "Aprobado";

            // set on dataItem
            var currenvalue = this.status;


            if (currenvalue == "1") {
                this.set("status", uno)
            } else if (currenvalue == "2") {
                this.set("status", dos)
                // $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("background-color", "red");
            } else if (currenvalue == 3) {
                this.set("status", tres)
            } else if (currenvalue == 4) {
                this.set("status", cuatro)
            }
            var currenkey = this.necessary_key;
            var no = "No";
            var yes = "Si";
            if (currenkey == "false")
                this.set("necessary_key", no)
            else if (currenkey == "true")
                this.set("necessary_key", yes)

        });

        //for (var i = 0; i < gridData.length; i++) {
        //    var currentUid = gridData[i].uid;
        //    if (gridData[i].ProcessedDate == null) {
        //        var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
        //        var currenRow2 = grid.getByUid($(currenrow).data("status"));
        //        var editButton = $(currenRow).find(".k-grid-edit");
        //        var custonButton = $(currenRow).find(".k-grid-Detalle")
        //        var status = $(currenRow).data("status");

        //        status.hide();
        //        custonButton.hide();
        //        //editButton.hide();

        //    }
        //}
    }

    function onDataBoundProgress(e) {
        var grid = $("#gridProgress").data("kendoGrid");

        var gridData = grid.dataSource.view();
        var data = grid.dataSource.data();

        $(data).each(function (i, row) {

            var currenkey = this.necessary_key;
            var no = "No";
            var yes = "Si";
            if (currenkey == "false")
                this.set("necessary_key", no)
            else if (currenkey == "true")
                this.set("necessary_key", yes)

        });

    }

    function onDataBound2(e) {
        var grid = $("#gridReady").data("kendoGrid");

        var gridData = grid.dataSource.view();
        var data = grid.dataSource.data();

       

        $(data).each(function (i, row) {
            var uno = "Pendiente";
            var dos = "En ejecución";
            var tres = "Instalado";
            var cuatro = "Aprobado";
            var cinco = "No Conectado";
            var seis = "No Instalado";

            // set on dataItem
            var currenvalue = this.status;
            var currentUid = gridData[i].uid;
            var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
            var editButton = $(currenRow).find(".k-grid-Actualizar");
            var verButton = $(currenRow).find(".k-grid-Ver");

            if (currenvalue == 1) {
                this.set("status", uno)

            } else if (currenvalue == 2) {
                this.set("status", dos)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "brown");

            } else if (currenvalue == 3) {
                this.set("status", tres)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "blue");

            } else if (currenvalue == 4) {
                this.set("status", cuatro)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "green");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "green");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "green");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "green");

            } else if (currenvalue == 5) {
                this.set("status", cinco)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "orange");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "orange");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "orange");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "orange");
            
            } else if (currenvalue == 6) {
                this.set("status", seis)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "red");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "red");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "red");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "red");

            }

            var currenkey = this.necessary_key;
            var no = "No";
            var yes = "Si";
            if (currenkey == "false")
                this.set("necessary_key", no)
            else if (currenkey == "true")
                this.set("necessary_key", yes)

            //OCULTA BOTON APROBAR
            if (currenvalue == cuatro || currenvalue == cinco || currenvalue == seis) {
                editButton.hide();
            }
            if (currenvalue == tres) {
                verButton.hide();
            }
           
        });


    }


    function UpdateLogger(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("CreateInstalation", "Status")?logger_id=" + stockReceiptId;

    }

    function LoggerView(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("DetailInstalation", "Status")?logger_id=" + stockReceiptId;

    }

    function InstalationUpdate(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("CreateInstalation", "Status")?logger_id=" + stockReceiptId;

    }
</script>

<style type="text/css" media="screen">
    

    .k-i-excel {
        background-image: url('../Content/images/table_excel.png');
        background-size: 20px 20px;
        background-position: left;
        background-repeat: no-repeat;
    }

    .pdf {
        background-image: url('../Content/images/30x30-pdf-icon.png');
        background-size: 20px 20px;
        background-position: left;
        background-repeat: no-repeat;
    }
</style>