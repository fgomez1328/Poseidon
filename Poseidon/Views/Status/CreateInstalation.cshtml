@model Poseidon.Models.Logger

@{
    ViewBag.Title = "CreateFormulario";
}

<h2>Formulario de Instalación</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Logger</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <fieldset class="k-block">

            <h3>Detalles del Sitio</h3>

            <table>
                <tr class="">
                    @Html.HiddenFor(model => model.logger_id)

                    @*EMPRESA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Nombre de sitio</label>
                    </td>

                    <td>
                        @Html.TextBoxFor(model => model.logger_sites_name, new { @class = "form-control", style = "width:190px" })
                        @Html.ValidationMessageFor(model => model.logger_sms)
                    </td>



                </tr>


                <tr class="">
                    @Html.HiddenFor(model => model.logger_id)

                    @*EMPRESA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Empresa</label>
                    </td>

                    <td>

                        <div class="editor-field">
                          @(Html.Kendo().DropDownListFor(m => m.Company.company_id)
                            .DataTextField("company_name")
                            .DataValueField("company_id")
                            .SelectedIndex(1)

                            .HtmlAttributes(new { style = "width:200px" })
                           .DataSource(source =>
                  {
                      source.Read(read =>
                      {
                          read.Action("GetCompany", "Helper"); //Set the Action and Controller name
                      }); //If true the DataSource will not filter the data on the client.
                  })
                        )
                        </div>

                    </td>

                    @*NUMERO DE SERIE*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Número de serie</label>
                    </td>

                    <td>

                        @Html.TextBoxFor(model => model.logger_serial_number, new { style = "width: 190px" } )
                        @Html.ValidationMessageFor(model => model.logger_serial_number, String.Empty, new { @class = "help-inline", @style = "color:red" })
                    </td>

                </tr>

                <tr>

                    @*ACCEDER AL SITIO*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">¿Problemas con ingreso al Sitio?</label>

                    </td>

                    <td>
                        <fieldset class="k-block" style="width:200px">
                            @if (Model.necesary_site_enter == null)
                            {
                                Model.necesary_site_enter = false;
                            }
                            @Html.HiddenFor(model => model.necesary_site_enter)

                            @Html.RadioButtonFor(model => model.necesary_site_enter, "true", new {style = "width: 50px", @onclick = "EnterYes()" })Si
                            @Html.RadioButtonFor(model => model.necesary_site_enter, "false", new { style = "width: 50px", @onclick = "EnterNo()",@ID = "checkidsite" })No

                        </fieldset>
                    </td>

                    @*TIPO DE INSTALACIÓN*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Tipo de instalación</label>
                    </td>

                    <td>

                        <div class="editor-field">
                            @(Html.Kendo().DropDownListFor(m => m.instalation_type_logger)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Presión",
                            Value = "Presión"
                            },
                            new SelectListItem() {
                            Text = "Flujo",
                            Value= "Flujo"
                            },
                            new SelectListItem() {
                            Text = "Presión/Flujo",
                            Value= "Presión/Flujo"
                            },
                            new SelectListItem() {
                            Text = "Controlador de presión",
                            Value= "Controlador de presión"
                            },
                            new SelectListItem() {
                            Text = "Comercial",
                            Value= "Comercial"
                            }

                            })

                            )
                        </div>

                    </td>

                </tr>

                <tr>

                    @*NUMERO DE TELEFONO*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Número de teléfono</label>
                    </td>

                    <td>
                        @Html.TextBoxFor(model => model.logger_sms, new {style = "width: 190px" })
                        @Html.ValidationMessageFor(model => model.logger_sms, String.Empty, new { @class = "help-inline", @style = "color:red" })
                    </td>

                    @*COMPAÑIA DE TELEFONO*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Compañia teléfono</label>
                    </td>

                    <td>

                        <div class="editor-field">
                            @(Html.Kendo().DropDownListFor(m => m.type_company_sms)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Entel",
                            Value = "Entel"
                            },
                            new SelectListItem() {
                            Text = "Claro",
                            Value= "Claro"
                            },
                            new SelectListItem() {
                            Text = "Movistar",
                            Value= "Movistar"
                            }

                            })

                            )
                        </div>

                    </td>

                 
                </tr>

              
                <tr>
                    @*CONDICIONES INSTALACIÓN*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Condiciones del Lugar de la Instalacion?</label>
                    </td>

                    <td>

                        <div>
                            @(Html.Kendo().DropDownListFor(m => m.conditions_installation)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Ideal",
                            Value = "Ideal"
                            },
                            new SelectListItem() {
                            Text = "Regulares",
                            Value= "Regulares"
                            },
                            new SelectListItem() {
                            Text = "Malas",
                            Value= "Malas"
                            },

                            })
                            .Value("1")
                            )

                        </div>
                    </td>

                    @*INTERPERIE*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">¿Logger se encuentra a la interperie?</label>
                    </td>

                    <td>
                        <fieldset class="k-block" style="width:200px">
                            @if (Model.logger_outdoor == null)
                            {
                                Model.logger_outdoor = false;
                            }
                            
                            @Html.RadioButtonFor(model => model.logger_outdoor, "true", new { style = "width: 50px" })Si
                            @Html.RadioButtonFor(model => model.logger_outdoor, "false", new {style = "width: 50px" })No
                            @Html.ValidationMessageFor(m => m.logger_outdoor)
                        </fieldset>

                    </td>

                </tr>


            </table>

        </fieldset>
        
        <br>
        <br>

        <fieldset class="k-block">

            <h3>Detalles de la Cámara</h3>

            <table id="camera_table_id">

                <tr>
                    @*POSICION DEL LOGGER*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">Posición del Logger</label>

                    </td>

                    <td>
                        <div class="col-md-10">

                            @(Html.Kendo().DropDownListFor(m => m.logger_position)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .HtmlAttributes(new { style = "width:200px" })
                        .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Standard",
                            Value = "Standard"
                            },
                            new SelectListItem() {
                            Text = "Alternativa",
                            Value= "Alternativa"
                            }

                            })

                            )
                            @Html.ValidationMessageFor(model => model.logger_position, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>

                    </td>

                    @*BOMBA PARA DESAGUAR*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Se necesita Bomba para Desaguar?</label>

                    </td>

                    <td>

                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.necessary_drain == null)
                                {
                                    Model.necessary_drain = false;
                                }
                                @Html.RadioButtonFor(model => model.necessary_drain, "true", new {  style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.necessary_drain, "false", new { style = "width: 50px" })No
                                @Html.ValidationMessageFor(m => m.necessary_drain)

                            </fieldset>
                        </div>

                    </td>

                </tr>

                <tr>
                    @*CAMARA INUNDADA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Cámara Inundada</label>
                    </td>

                    <td>
                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @Html.HiddenFor(model => model.flooded_chamber)
                                @Html.RadioButtonFor(model => model.flooded_chamber, "true", new { style = "width: 50px", @onclick = "ApproveYes()" })Si
                                @Html.RadioButtonFor(model => model.flooded_chamber, "false", new { style = "width: 50px", @onclick = "ApproveNo()", @ID = "checkidchamber" })No
                                @Html.ValidationMessageFor(m => m.flooded_chamber)

                            </fieldset>
                        </div>

                    </td>


                    @*MANIPULAR TRAFICO*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Se necesita Desviar/Manipular Trafico?</label>

                    </td>

                    <td>

                        <div>
                            <fieldset class="k-block style=" width:200px">
                                @if (Model.necessary_manipulate_traffic == null)
                                {
                                    Model.necessary_manipulate_traffic = false;
                                }
                                @Html.RadioButtonFor(model => model.necessary_manipulate_traffic, "true", new {  style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.necessary_manipulate_traffic, "false", new { style = "width: 50px" })No
                                @Html.ValidationMessageFor(m => m.necessary_manipulate_traffic)

                            </fieldset>
                        </div>

                    </td>

                </tr>

                <tr>
                    @*TIPO DE CAMARA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Tipo de Cámara</label>

                    </td>

                    <td>

                        @(Html.Kendo().DropDownListFor(m => m.chamber_type)

                        .DataTextField("Text")
                        .DataValueField("Value")
                        .HtmlAttributes(new { style = "width:200px" })
                        .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Albanileria",
                            Value = "Albanileria"
                            },
                            new SelectListItem() {
                            Text = "Hormigón Armado",
                            Value= "Hormigón Armado"
                            },
                            new SelectListItem() {
                            Text = "Metálica",
                            Value= "Metálica"
                            },
                            new SelectListItem() {
                            Text = "Hormigón",
                            Value= "Hormigón"
                            },

                            })

                        )

                    </td>

                    @*HERRAMIENTA PARA ABRIR CAMARA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">¿Es necesario Herramienta para apertura de Cámara?</label>

                    </td>

                    <td>
                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.necessary_tool_open_chamber == null)
                                {
                                    Model.necessary_tool_open_chamber = false;
                                }
                                @Html.RadioButtonFor(model => model.necessary_tool_open_chamber, "true", new {style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.necessary_tool_open_chamber, "false", new {style = "width: 50px" })No
                                @Html.ValidationMessageFor(m => m.necessary_tool_open_chamber)

                            </fieldset>
                        </div>

                    </td>

                </tr>

                <tr>

                    @*CONDICIONES DE LA CAMARA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Condición de La Cámara</label>
                    </td>

                    <td>

                        @(Html.Kendo().DropDownListFor(m => m.chamber_condition)

                        .DataTextField("Text")
                        .DataValueField("Value")
                        .HtmlAttributes(new { style = "width:200px" })
                        .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Ideales",
                            Value = "Ideales"
                            },
                            new SelectListItem() {
                            Text = "Regulares",
                            Value= "Regulares"
                            },
                            new SelectListItem() {
                            Text = "Malas",
                            Value= "Malas"
                            },

                            })
                        )

                    </td>

                    @*TIPO DE CAMARA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Tipo de Tapa de Camara</label>

                    </td>

                    <td>

                        @(Html.Kendo().DropDownListFor(m => m.chamber_type_tap)

                        .DataTextField("Text")
                        .DataValueField("Value")
                        .HtmlAttributes(new { style = "width:200px" })
                        .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Albanileria",
                            Value = "Albanileria"
                            },
                            new SelectListItem() {
                            Text = "Hormigon Armado",
                            Value= "Hormigon Armado"
                            },
                            new SelectListItem() {
                            Text = "Metalica",
                            Value= "Metalica"
                            },
                            new SelectListItem() {
                            Text = "Hormigon",
                            Value= "Hormigon"
                            },

                            })
                        )

                    </td>
                </tr>

                <tr>

                    @*DOS OPERADORES PARA ABRIR CAMARAA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">¿Se necesitaron 2 operadores para abrir la cámara?</label>

                    </td>

                    <td>

                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.two_thechnical_open_chamber == null)
                                {
                                    Model.two_thechnical_open_chamber = false;
                                }
                                @Html.RadioButtonFor(model => model.two_thechnical_open_chamber, "true", new {  style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.two_thechnical_open_chamber, "false", new { style = "width: 50px" })No
                                @Html.ValidationMessageFor(m => m.two_thechnical_open_chamber)

                            </fieldset>
                        </div>
                    </td>

                </tr>


            </table>

        </fieldset>

        <br />
        <br>

        <fieldset class="k-block" >

            <h3>Detalles de la Calidad de la Señal</h3>

            <table align="left" id="signal_quality_id">

                <tr align="left">

                    @*POSICION ANTENA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Posición de la antena</label>

                    </td>

                    <td>

                        <div class="col-md-10">

                            <div class="editor-field">
                                @(Html.Kendo().DropDownListFor(m => m.antenna_position)
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .SelectedIndex(1)
                                .HtmlAttributes(new { style = "width:200px" })
                                .BindTo(new List<SelectListItem>
                                () {
                                new SelectListItem() {
                                Text = "Standard",
                                Value= "Standard"
                                },
                                new SelectListItem() {
                                Text = "Alternativa",
                                Value= "Alternativa"
                                }

                                })

                                )
                            </div>
                            @Html.ValidationMessageFor(model => model.antenna_position, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>
                    </td>

                    @*TIPO DE ANTENA*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">Tipo de Antena Usada</label>

                    </td>

                    <td>
                        @(Html.Kendo().DropDownListFor(m => m.antenna_type)

                        .DataTextField("Text")
                        .DataValueField("Value")
                        .HtmlAttributes(new { style = "width:200px" })
                        .BindTo(new List<SelectListItem>
                        () {
                        new SelectListItem() {
                        Text = "Polarizacion Vertical",
                        Value = "Polarizacion Vertical"
                        },
                        new SelectListItem() {
                        Text = "Domo",
                        Value= "Domo"
                        },

                        })
                        .Value("1")
                        )


                    </td>

                </tr>



                <tr>
                    @*GPRS STATUS*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">¿Aprueba Test GPRS?</label>
                    </td>

                    <td>

                        <div class="col-md-10">
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.gprs_test_status == null)
                                {
                                    Model.gprs_test_status = true;
                                }
                                @Html.RadioButtonFor(model => model.gprs_test_status, "true", new { style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.gprs_test_status, "false", new { style = "width: 50px" })No
                                @Html.ValidationMessageFor(model => model.gprs_test_status, String.Empty, new { @class = "help-inline", @style = "color:red" })
                            </fieldset>
                        </div>
                    </td>

                    @*SE PUEDE INSTALAR POSE DE ANTENA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Se puede Instalar Poste para Antena</label>
                    </td>

                    <td>
                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.can_lamppost_with_antenna == null)
                                {
                                    Model.can_lamppost_with_antenna = false;
                                }
                                @Html.RadioButtonFor(model => model.can_lamppost_with_antenna, "true", new { style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.can_lamppost_with_antenna, "false", new { style = "width: 50px" })No
                                @Html.ValidationMessageFor(model => model.can_lamppost_with_antenna, String.Empty, new { @class = "help-inline", @style = "color:red" })
                               
                            </fieldset>
                        </div>
                    </td>

                </tr>

                <tr>

                    @*FINAL CSQ*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Final Csq</label>

                    </td>

                    <td>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.final_csq, new { style = "width: 190px" })
                            @Html.ValidationMessageFor(model => model.final_csq, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>

                    </td>

                    @*CSQ FUERA DE CAMARA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">CSQ fuera de la Camara</label>

                    </td>

                    <td>
                        <fieldset class="k-block" style="width:200px">
                            @if (Model.Csq_outdoor == null)
                            {
                                Model.Csq_outdoor = false;
                            }
                            @Html.RadioButtonFor(model => model.Csq_outdoor, "true", new { style = "width: 50px" })Si
                            @Html.RadioButtonFor(model => model.Csq_outdoor, "false", new { style = "width: 50px" })No
                            @Html.ValidationMessageFor(m => m.Csq_outdoor)

                        </fieldset>
                    </td>

                </tr>


            </table>

        </fieldset>

        <br>
        <br>


        <fieldset class="k-block">

            <h3>Detalles de la Instalación</h3>

            <table align="left" id="instalation_detail_id">

                <tr>

                    @*TIPO DE INSTALACIÓN SITE*@
                    <td>
                        <label class="required" style="width:210px">Tipo de Instalación</label>
                    </td>

                    <td>
                        <div class="col-md-10">
                            <div class="">
                                @(Html.Kendo().DropDownListFor(m => m.instalation_type)
                                .DataTextField("Text")
                                .DataValueField("Value")
                                .HtmlAttributes(new { style = "width:200px" })
                                .BindTo(new List<SelectListItem>
                                () {
                                new SelectListItem() {
                                Text = "PCP",
                                Value = "PCP"
                                },
                                new SelectListItem() {
                                Text = "VRP",
                                Value= "VRP"
                                },
                                new SelectListItem() {
                                Text = "Comerciales",
                                Value= "Comerciales"
                                },

                                })

                                )
                            </div>

                            @Html.ValidationMessageFor(model => model.instalation_type, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>

                    </td>

                    @*FLUJOMETRO STATUS*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Estado del Flujómetro</label>
                    </td>

                    <td>

                        <div class="">
                            @(Html.Kendo().DropDownListFor(m => m.state_flowmeter)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Ideales",
                            Value = "Ideales"
                            },
                            new SelectListItem() {
                            Text = "Regulares",
                            Value= "Regulares"
                            },
                            new SelectListItem() {
                            Text = "Malas",
                            Value= "Malas"
                            },

                            })
                            )
                        </div>

                    </td>

                </tr>

                <tr>
                    @*LECTURA MANOMETRO*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Lectura Manómetro AAr(mca)</label>

                    </td>

                    <td>

                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.manometer_aab_value, new { @class = "form-control", style = "width:190px" })
                            @Html.ValidationMessageFor(model => model.manometer_aab_value, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>

                    </td>

                    @*TIPO DE FLUJOMETRO*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">Tipo de Flujómetro</label>

                    </td>

                    <td>

                        @(Html.Kendo().DropDownListFor(m => m.type_flowmeter)
                        .DataTextField("Text")
                        .DataValueField("Value")
                        .HtmlAttributes(new { style = "width:200px" })
                        .BindTo(new List<SelectListItem>
                        () {
                        new SelectListItem() {
                        Text = "Electromagnétismo Tubo",
                        Value = "Electromagnétismo Tubo"
                        },
                        new SelectListItem() {
                        Text = "Velocímetro Tubo",
                        Value= "Velocímetro Tubo"
                        },
                        new SelectListItem() {
                        Text = "ElectroMagnético",
                        Value= "ElectroMagnético"
                        },
                        new SelectListItem() {
                        Text = "Inserción",
                        Value= "Inserción"
                        },
                        new SelectListItem() {
                        Text = "Velocímetro de Inserción",
                        Value= "Velocímetro de Inserción"
                        },
                        new SelectListItem() {
                        Text = "No aplica",
                        Value= "No aplica"
                        ,Selected=true
                        }

                        })

                        )
                    </td>

                </tr>

                <tr>
                    @*LECTURA LOGGER AAR*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">Lectura Logger AAr(mca)</label>

                    </td>

                    <td>

                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.logger_aar_value, new { @class = "form-control", style = "width:190px" })
                            @Html.ValidationMessageFor(model => model.logger_aar_value, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>

                    </td>

                    @*CON EMISOR DE PULSOS*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Emisor de Pulsos(mca)</label>

                    </td>

                    <td>

                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.with_pulser == null)
                                {
                                    Model.with_pulser = false;
                                }
                                @Html.RadioButtonFor(model => model.with_pulser, "true", new {  style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.with_pulser, "false", new { style = "width: 50px" })No
                                @Html.ValidationMessageFor(m => m.with_pulser)

                            </fieldset>
                        </div>

                    </td>

                </tr>

                <tr>

                    @*LECTURA MANOMETRO AAB*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Lectura Manómetro AAb(mca)</label>
                    </td>

                    <td>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.manometer_aar_value, new { @class = "form-control", style = "width:190px" })
                            @Html.ValidationMessageFor(model => model.manometer_aar_value, String.Empty, new { @class = "help-inline", @style = "color:red" })


                        </div>

                    </td>

                    @*FUE REEMPLAZADO EL EMISOR DE PULSOS*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">¿Fue Reeplazado el Emisor de Pulsos?</label>
                    </td>

                    <td>

                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.pulser_changed == null)
                                {
                                    Model.pulser_changed = false;
                                }
                                @Html.RadioButtonFor(model => model.pulser_changed, "true", new {  style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.pulser_changed, "false", new { style = "width: 50px" })No
                                @Html.ValidationMessageFor(m => m.pulser_changed)
                            </fieldset>
                        </div>

                    </td>

                </tr>

                <tr>

                    @*LECTURA DE LOGGER AAB*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Lectura Logger AAb(mca)</label>

                    </td>

                    <td>

                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.logger_aab_value, new { @class = "form-control", style = "width:190px" })
                            @Html.ValidationMessageFor(model => model.logger_aab_value, String.Empty, new { @class = "help-inline", @style = "color:red" })


                        </div>

                    </td>

                    @*LITROS POR PULSOS*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Litros por Pulso</label>

                    </td>

                    <td>

                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.liters_per_pulser, new { @class = "form-control", style = "width:190px" })
                            @Html.ValidationMessageFor(model => model.liters_per_pulser, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>

                    </td>

                </tr>


            </table>

        </fieldset>

        <br>
        <br>


        <fieldset class="k-block">

            <h3>Canales Usados del Logger</h3>

            <table align="left" id="logger_canal_id">

                <tr>
                    @*CANAL 1*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Canal 1</label>
                    </td>

                    <td>
                        <div>
                            @(Html.Kendo().DropDownListFor(m => m.channel_1)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Presion Interna",
                            Value = "Presion Interna"
                            },
                            new SelectListItem() {
                            Text = "Presion Externa",
                            Value= "Presion Externa"
                            },
                            new SelectListItem() {
                            Text = "Digital Caudal",
                            Value= "Digital Caudal"
                            },
                            new SelectListItem() {
                            Text = "4-20mA",
                            Value= "4-20mA"
                            },
                            new SelectListItem() {
                            Text = "Modbus",
                            Value= "Modbus"
                            },
                            new SelectListItem() {
                            Text = "Serial",
                            Value= "Serial"
                            },
                            new SelectListItem() {
                            Text = "No Aplica",
                            Value= "No Aplica"
                            }
                            })
                            )
                        </div>

                    </td>

                    @*CANAL 3*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Canal 3</label>
                    </td>

                    <td>
                        <div>
                            @(Html.Kendo().DropDownListFor(m => m.channel_3)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                          new SelectListItem() {
                            Text = "Presion Interna",
                            Value = "Presion Interna"
                            },
                            new SelectListItem() {
                            Text = "Presion Externa",
                            Value= "Presion Externa"
                            },
                            new SelectListItem() {
                            Text = "Digital Caudal",
                            Value= "Digital Caudal"
                            },
                            new SelectListItem() {
                            Text = "4-20mA",
                            Value= "4-20mA"
                            },
                            new SelectListItem() {
                            Text = "Modbus",
                            Value= "Modbus"
                            },
                            new SelectListItem() {
                            Text = "Serial",
                            Value= "Serial"
                            },
                            new SelectListItem() {
                            Text = "No Aplica",
                            Value= "No Aplica",
                            Selected=true
                            }
                            })
                            )
                        </div>


                    </td>

                </tr>

                <tr>
                    @*CANAL 2*@
                    <td>
                        <div>
                            <label for="fullname" class="required" style="width:210px">  Canal 2</label>
                        </div>

                    </td>

                    <td>
                        <div>
                            @(Html.Kendo().DropDownListFor(m => m.channel_2)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                            new SelectListItem() {
                            Text = "Presion Interna",
                            Value = "Presion Interna"
                            },
                            new SelectListItem() {
                            Text = "Presion Externa",
                            Value= "Presion Externa"
                            },
                            new SelectListItem() {
                            Text = "Digital Caudal",
                            Value= "Digital Caudal"
                            },
                            new SelectListItem() {
                            Text = "4-20mA",
                            Value= "4-20mA"
                            },
                            new SelectListItem() {
                            Text = "Modbus",
                            Value= "Modbus"
                            },
                            new SelectListItem() {
                            Text = "Serial",
                            Value= "Serial"
                            },
                            new SelectListItem() {
                            Text = "No Aplica",
                            Value= "No Aplica",
                            Selected=true
                            }
                            })
                            )
                        </div>
                    </td>

                    @*CANAL 4*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Canal 4</label>
                    </td>

                    <td>
                        <div>
                            @(Html.Kendo().DropDownListFor(m => m.channel_4)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                            () {
                             new SelectListItem() {
                            Text = "Presion Interna",
                            Value = "Presion Interna"
                            },
                            new SelectListItem() {
                            Text = "Presion Externa",
                            Value= "Presion Externa"
                            },
                            new SelectListItem() {
                            Text = "Digital Caudal",
                            Value= "Digital Caudal"
                            },
                            new SelectListItem() {
                            Text = "4-20mA",
                            Value= "4-20mA"
                            },
                            new SelectListItem() {
                            Text = "Modbus",
                            Value= "Modbus"
                            },
                            new SelectListItem() {
                            Text = "Serial",
                            Value= "Serial"
                            },
                            new SelectListItem() {
                            Text = "No Aplica",
                            Value= "No Aplica",
                            Selected=true
                            }
                            })

                            )
                        </div>

                    </td>

                </tr>
            </table>

        </fieldset>

        <br>
        <br>


        <fieldset class="k-block">

            <h3>Equipamiento Utilizado por el Instalador (Verificación)</h3>

            <table align="left" id="tool_thechnical_id">



                <tr align="left">

                    @*TIPO DE LOGGER*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Tipo de Logger</label>

                    </td>

                    <td>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.logger_type, new { @class = "form-control" ,style="width:200px" })
                            @Html.ValidationMessageFor(model => model.logger_type, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>
                    </td>

                    @*BATERIA INSTALADA*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">¿Batería Instalada?</label>

                    </td>

                    <td>
                        <div>
                            <fieldset class="k-block" style="width:200px">
                                @if (Model.battery_installed == null)
                                {
                                    Model.battery_installed = false;
                                }
                                @Html.RadioButtonFor(model => model.battery_installed, "true", new { style = "width: 50px" })Si
                                @Html.RadioButtonFor(model => model.battery_installed, "false", new {style = "width: 50px" })No
                                @Html.ValidationMessageFor(m => m.battery_installed)

                            </fieldset>
                        </div>

                    </td>

                </tr>

                <tr>

                    @*NUMERO SERIE BATERIA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">N/S Logger</label>

                    </td>

                    <td>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.logger_serial_number, new { @class = "form-control", style = "width:200px" })
                            @Html.ValidationMessageFor(model => model.logger_serial_number)


                        </div>

                    </td>

                    @*TIPO DE BATERIA*@
                    <td>

                        <label for="fullname" class="required" style="width:210px">Tipo de Bateria</label>

                    </td>

                    <td>
                        <div>
                            @(Html.Kendo().DropDownListFor(m => m.battery_type)

                            .DataTextField("Text")
                            .DataValueField("Value")
                            .HtmlAttributes(new { style = "width:200px" })
                            .BindTo(new List<SelectListItem>
                                () {
                                 new SelectListItem() {
                                Text = "No Aplica",
                                Value = "No Aplica"
                                },
                                new SelectListItem() {
                                Text = "Interna",
                                Value = "Interna"
                                },
                                new SelectListItem() {
                                Text = "Externa",
                                Value= "Externa"
                                },
                                new SelectListItem() {
                                Text = "Ambas",
                                Value= "Ambas"
                                }
                                })

                            )
                        </div>
                    </td>

                </tr>


                <tr>
                    @*NUMERO SERIE BATERIA*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">N/S Bateria</label>
                    </td>

                    <td>
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.battery_serial_number, new { @class = "form-control", style = "width:200px" })
                            @Html.ValidationMessageFor(model => model.battery_serial_number, String.Empty, new { @class = "help-inline", @style = "color:red" })

                        </div>

                    </td>

                </tr>
            </table>

        </fieldset>

        <br>
        <br>


        <fieldset class="k-block">

            <h3>Descripción Detallada</h3>

            <table align="left">

                <tr>
                    @*SUBIR IMAGEN*@
                    <td>
                        <div id="kendoUploadZone">

                            <div id="kendoUploadForm" style="display: inline-block; padding-bottom: 30px; width: 300px;">

                                <!-- Kendo UI Upload Control for uploading image -->

                                <div id="kendoUploadControl" style="width: 50%; float: left;">
                                    @(Html.Kendo().Upload()
                                .Name("files").Async(a => a
                                .Save("Save", "Home")
                                .Remove("Remove", "Home")
                                .AutoUpload(true)).Events(events => events.Select("onSelect")
                                .Success("onSuccess")
                               
                                 ))

                                </div>

                                <!-- Instant preview uploaded image by Kendo UI Upload Control -->

                                <div id="kendoUploadDisplay" style="width: 45%; float: right;">
                                    @Html.HiddenFor(x => x.status)

                                    @*<div id="kendoUploadImage" style="display: block;">
                                        <img id="imgUploaded" style="width: 60px; height: 60px;" src=""
                                             alt="loading" />
                                    </div>*@
                                    @Html.ValidationSummary(true)
                                    <img src="@Url.Content("~/Images/" + Model.url_image)" alt="Image" width="250" height="200"/>
                                </div>

                            </div>

                        </div>
                    </td>

                </tr>

                <tr>
                    @*COMENTARIOS*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Comentarios</label>
                    </td>

                    <td>

                        @Html.TextAreaFor(model => model.notes, new { @style = " background-color: #ffffff;width: 300px; height: 100px;" })
                        @Html.ValidationMessageFor(model => model.notes, String.Empty, new { @class = "help-inline", @style = "color:red" })

                    </td>



                </tr>

                <tr>
                    @*FECHA Y HORA DE TERMINO*@
                    <td>
                        <label for="fullname" class="required" style="width:210px">Fecha termino</label>

                    </td>

                    <td>
                        <div class="col-md-10">
                           
                            @(Html.Kendo().DateTimePickerFor(model => model.user_instalation_end_date)
                              .Value(DateTime.Now.AddDays(1))
                              .Format("yyyy-MM-dd HH:mm")
                            )
                            @Html.ValidationMessageFor(model => model.user_instalation_end_date, String.Empty, new { @class = "help-inline", @style = "color:red" })
                        </div>

                    </td>

                </tr>

            </table>

        </fieldset>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
                <input type="button" value="Volver" class="btn btn-default" width="170" id="btnBack" onclick="location.href='@Url.Action("ListUser", "Status")' " />
            </div>
        </div>
    </div>
}

<script>



    var viewModel = kendo.observable({
        material: [
            { id: 1, name: "Albañilería" },
            { id: 2, name: "Hormigon Armado" },
            { id: 3, name: "Metalica" },
            { id: 4, name: "Hormigon" }
        ],

        condicion: [
            { id: 1, name: "Ideal" },
            { id: 2, name: "Regular" },
            { id: 3, name: "Mala" }
        ],
        antena: [
            { id: 1, name: "Polarizacion Vertical" },
            { id: 2, name: "Domo" },

        ],

        flujometro: [
           { id: 1, name: "Electromagnetico Tubo" },
           { id: 2, name: "Velocimetro Tubo" },
           { id: 3, name: "Electromagnetico Insercion" },
            { id: 4, name: "Velocimetro Insercion" },

        ],
        flags: [
            { id: 1, name: "SI" },
            { id: 2, name: "NO" },


        ],

        camara: [
           { id: 1, name: "Concreto" },
           { id: 2, name: "Metalica" },
           { id: 3, name: "Sin Tapa" }
        ],

        canales: [
          { id: 1, name: "Presion Interna" },
          { id: 2, name: "Presion Externa" },
          { id: 3, name: "4-20mA" },
          { id: 4, name: "Digital Caudal" },
           { id: 5, name: "Modbus" },
             { id: 6, name: "Serial" },

        ],


        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel2 = kendo.observable({


        canales4: [
          { Id: 1, name: "Presion Interna" },
          { Id: 2, name: "Presion Externa" },
          { Id: 3, name: "4-20mA" },
          { Id: 4, name: "Digital Caudal" },
           { Id: 5, name: "Modbus" },
             { Id: 6, name: "Serial" },

        ],


        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });
    var viewModel3 = kendo.observable({

        canales3: [
          { Id3: 1, name: "Presion Interna" },
          { Id3: 2, name: "Presion Externa" },
          { Id3: 3, name: "4-20mA" },
          { Id3: 4, name: "Digital Caudal" },
           { Id3: 5, name: "Modbus" },
             { Id3: 6, name: "Serial" },

        ],

        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });
    var viewModel4 = kendo.observable({

        canales2: [
          { id2: 1, name: "Presion Interna" },
          { id2: 2, name: "Presion Externa" },
          { id2: 3, name: "4-20mA" },
          { id2: 4, name: "Digital Caudal" },
           { id2: 5, name: "Modbus" },
             { id2: 6, name: "Serial" },

        ],


        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });
    var viewModel5 = kendo.observable({


        flujestado: [
           { idf: 1, name: "Ideal" },
           { idf: 2, name: "Regular" },
           { idf: 3, name: "Mala" }
        ],


        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }

    });
    var viewModel6 = kendo.observable({


        condli: [
           { idc: 1, name: "Ideal" },
           { idc: 2, name: "Regular" },
           { idc: 3, name: "Mala" }
        ],




        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel7 = kendo.observable({





        tipcamara: [
            { idt: 1, name: "Albañilería" },
            { idt: 2, name: "Hormigon Armado" },
            { idt: 3, name: "Metalica" },
            { idt: 4, name: "Hormigon" }
        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });


    var viewModel8 = kendo.observable({





        tipotapcamara: [
            { idttc: 1, name: "Albañilería" },
            { idttc: 2, name: "Hormigon Armado" },
            { idttc: 3, name: "Metalica" },
            { idttc: 4, name: "Hormigon" }
        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel9 = kendo.observable({





        epulso: [
              { idp: 1, name: "SI" },
              { idp: 2, name: "NO" },


        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel10 = kendo.observable({





        frepulso: [
              { idfp: 1, name: "SI" },
              { idfp: 2, name: "NO" },


        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel11 = kendo.observable({





        caminundada: [
              { idcm: 1, name: "SI" },
              { idcm: 2, name: "NO" },


        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel12 = kendo.observable({





        ocamara: [
              { idoc: 1, name: "SI" },
              { idoc: 2, name: "NO" },


        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel13 = kendo.observable({





        bombades: [
              { idbd: 1, name: "SI" },
              { idbd: 2, name: "NO" },


        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel14 = kendo.observable({





        desviartraf: [
              { idmt: 1, name: "SI" },
              { idmt: 2, name: "NO" },


        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });


    var viewModel15 = kendo.observable({





        herrcamara: [
              { idhap: 1, name: "SI" },
              { idhap: 2, name: "NO" },


        ],





        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel16 = kendo.observable({





        apertcamara: [
              { idhpc: 1, name: "SI" },
              { idhpc: 2, name: "NO" },


        ],


        displayMultipleSelectValue: function () {
            return this.get("multipleSelectValue").join(", ");
        }



    });

    var viewModel17 = kendo.observable({

        flag1: ["Si"],
        isChecked: true,
        displayCheckBoxListValue: function() {
            return this.get("flag").join(", ");
        },


    });

    kendo.bind($("select"), viewModel);
    kendo.bind($("select"), viewModel2);
    kendo.bind($("select"), viewModel3);
    kendo.bind($("select"), viewModel4);
    kendo.bind($("select"), viewModel5);
    kendo.bind($("select"), viewModel6);
    kendo.bind($("select"), viewModel7);
    kendo.bind($("select"), viewModel8);
    kendo.bind($("select"), viewModel9);
    kendo.bind($("select"), viewModel10);
    kendo.bind($("select"), viewModel11);
    kendo.bind($("select"), viewModel12);
    kendo.bind($("select"), viewModel13);
    kendo.bind($("select"), viewModel14);
    kendo.bind($("select"), viewModel15);
    kendo.bind($("select"), viewModel16);
    kendo.bind($("input"), viewModel17);
    function onSelect(e) {



        $("#kendoUploadImage").show();
        $.each(e.files, function (index, value) {
            
                readMultipleFiles(value);
            
        });


    }



    function onSuccess(e) {



        var responseTxt = jQuery.parseJSON(e.XMLHttpRequest.responseText);



        var status = responseTxt.Status;
        var srcValue = responseTxt.PictureUrl;
        var reader = new FileReader();

        if (status == true) {

            $("#imgUploaded").attr('src', srcValue);

        } else {

            $("#imgUploaded").attr('src', srcValue);
            $("#kendoUploadImage").hide();

        }



    }
    function readMultipleFiles(file) {
        var reader = new FileReader();
        reader.onload = function (e) {
            // bind the file content
            $("img").attr({ src: e.target.result });
        }
        reader.readAsDataURL(file.rawFile);
    }



    var checkedValues = $('input:checkbox:checked').map(function () {
        return this.value;
    }).get();

    $(function () {
        // Notice that the Name() of the editor is used to get its client-side instance
        var editor = $("#editor").data("kendoEditor");
    });

    $(document).ready(function () {
        var selectedValues = "";
        $checkedCheckboxes = $("input:checkbox:checked");
        $checkedCheckboxes.each(function () {
            selectedValues += $(this).val() + ",";
        });
        var lat = $("#flooded_chamber");
        var enter = $("#necesary_site_enter");

        if (enter.val() == "True") {
            EnterYes2();

        }else
            $("#checkidsite").attr('checked', true);
   
        if (lat.val() == "True") {
            ApproveYes();
        }else
            $("#checkidchamber").attr('checked', true);

    });

    function ApproveNo() {
        $("#signal_quality_id").show();
        $("#instalation_detail_id").show();
        $("#logger_canal_id").show();
        $("#tool_thechnical_id").show();
        $("#notes").val("");
        var lat = $("#flooded_chamber");
        lat.val(false);

    }
    function ApproveYes() {

        $("#signal_quality_id").hide();
        $("#instalation_detail_id").hide();
        $("#logger_canal_id").hide();
        $("#tool_thechnical_id").hide();
        $("#notes").val("Cámara inundada, no se puede continuar con la instalación.");
        var lat = $("#flooded_chamber");
        lat.val(true);
    }

    function EnterYes() {
        $("#signal_quality_id").hide();
        $("#instalation_detail_id").hide();
        $("#logger_canal_id").hide();
        $("#tool_thechnical_id").hide();
        $("#camera_table_id").hide();
        $("#notes").val("Cámara no cumple con las condiciones básicas para ingresar e instalar el equipo.");

        var enter = $("#necesary_site_enter");
        enter.val(true);

    }

    function EnterYes2() {
        $("#signal_quality_id").hide();
        $("#instalation_detail_id").hide();
        $("#logger_canal_id").hide();
        $("#tool_thechnical_id").hide();
        $("#camera_table_id").hide();
        if($("notes").val == "Cámara no cumple con las condiciones básicas para ingresar e instalar el equipo." ){
            $("#notes").val("Cámara no cumple con las condiciones básicas para ingresar e instalar el equipo.");
        }

        var enter = $("#necesary_site_enter");
        enter.val(true);

    }
    function EnterNo() {
        $("#signal_quality_id").show();
        $("#instalation_detail_id").show();
        $("#logger_canal_id").show();
        $("#tool_thechnical_id").show();
        $("#camera_table_id").show();

        $("#notes").val("");
        var enter = $("#necesary_site_enter");
        enter.val(false);
    }



</script>