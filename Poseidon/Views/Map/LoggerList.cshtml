@model IEnumerable<dynamic>

@{
    ViewBag.Title = "MAPA INSTALACIONES";
}


<div id="gridv" class="gridDivReady">

    <h2>Lista con Estado</h2>
    @(Html.Kendo().Grid<Poseidon.Models.Logger>()
        .Name("gridReady")
        .ToolBar(tools => tools.Excel().HtmlAttributes(new { @class = "k-i-excel", @style = "width:150px;height:30px" }))
        .Excel(excel => excel
                .AllPages(true)
                .ProxyURL(Url.Action("Excel_Export_Save", "Task"))
        )
        .ToolBar(tools => tools.Pdf().HtmlAttributes(new { @class = "pdf", @style = "width:150px;height:30px" }))
        .Pdf(pdf => pdf
            .FileName("ListStatus.pdf")
            .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
        )
        .DataSource(dataSource => dataSource
        .Ajax()
        .Model(c =>
        {
            c.Id("logger_id");
            c.Field("logger_sites_name", typeof(string));
            c.Field("zone_name", typeof(string));
            c.Field("status", typeof(string));
            c.Field("user_instalation_start_date", typeof(DateTime));
            c.Field("user_instalation", typeof(string));
            c.Field("approval_date", typeof(DateTime));
            c.Field("company_id", typeof(string));

        })
                    .Read(read => read.Action("ReadLogger", "Map"))
                             .Sort(a => a.Add("status").Ascending())
        )
        .Columns(columns =>
        {         
            columns.Bound("logger_sites_name").Title("Nombre Sitio");
            columns.Bound("company_id").Title("Compañia");
            columns.Bound("zone_name").Width("190").Title("Localidad");
            columns.Bound("status").Title("Estado");
            columns.Bound("user_instalation").Title("Instalador");
            columns.Bound("user_instalation_start_date").Title("Inicio Instalación").Format("{0:dd/MM/yyyy HH:mm:ss}");
            columns.Bound("approval_date").Title("Termino Instalación").Format("{0:dd/MM/yyyy HH:mm:ss}");
            columns.Command(command =>
                    {
                        command.Custom("Ver").Click("ViewDetailStatus");
                        command.Custom("Geo").Click("ViewGeo");
                    });


        })
        .HtmlAttributes(new { style = "font-size:11px" })
        .Sortable()

        .Events(e => e.DataBound("onDataBound2"))
        .Filterable(filterable => filterable
        .Extra(false))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)

        .ButtonCount(5))

    )

</div>

<br />
<br />

<table>
    <tr>
        <td>
            <img src="@Url.Content("~/Content/images/yellow_MarkerP.png")" alt="Image" />
            Pendiente |
        </td>
        <td>
            <img src="@Url.Content("~/Content/images/brown_MarkerE.png")" alt="Image" />
            En Ejecución |
        </td>
        <td>
            <img src="@Url.Content("~/Content/images/blue_MarkerI.png")" alt="Image" />
            Instalado |
        </td>
        <td>
            <img src="@Url.Content("~/Content/images/green_MarkerA.png")" alt="Image" />
            Aprobado |
        </td>
        <td>
            <img src="@Url.Content("~/Content/images/orange_MarkerN.png")" alt="Image" />
            No Conectado |
        </td>
        <td>
            <img src="@Url.Content("~/Content/images/red_MarkerR.png")" alt="Image" />
            No Instalado 
        </td>
    </tr>
</table>

<div id="map" style="width: 960px; height: 600px;" />


<script src="https://maps.googleapis.com/maps/api/js?v=3.exp&sensor=false" type="text/javascript"></script>
<script type="text/javascript" src="https://maps.google.com/maps/api/js?libraries=geometry&sensor=true&region=CL"></script>


<script type="text/javascript">



    $(document).ready(function () {

        var path = [];
        var ne = new google.maps.LatLng(-32.06, -70.6);
        var sw = new google.maps.LatLng(-28.86, -68.4);
        var limache = new google.maps.LatLng(-32.06, -70.6);
        var limache1 = new google.maps.LatLng(-24.05, -69.6);
        var bounds = new google.maps.LatLngBounds(ne, sw);


        path.push(limache);
        path.push(limache1);


        bounds.extend(path[path.length - 1]);


        var image1 = "@Url.Content("~/Content/images/Limache1.png")";
        var pendiente = "@Url.Content("~/Content/images/yellow_MarkerP.png")";
        var ejecucion = "@Url.Content("~/Content/images/brown_MarkerE.png")";
        var instalado = "@Url.Content("~/Content/images/blue_MarkerI.png")";
        var aprobado = "@Url.Content("~/Content/images/green_MarkerA.png")";
        var nofuncionando = "@Url.Content("~/Content/images/orange_MarkerN.png")";
        var noinstalado = "@Url.Content("~/Content/images/red_MarkerR.png")";

        var iconmarker = [];

        iconmarker.push(pendiente);
        iconmarker.push(ejecucion);
        iconmarker.push(instalado);
        iconmarker.push(aprobado);
        iconmarker.push(nofuncionando);
        iconmarker.push(noinstalado);


        var estados = [];


        estados.push('1');
        estados.push('2');
        estados.push('3');
        estados.push('4');
        estados.push('5');
        estados.push('6');

        var options = {
            zoom: 9,

            mapTypeId: google.maps.MapTypeId.ROADMAP

        };

        var googleMap = new google.maps.Map($("#map")[0], options);

        var infoWindow = new google.maps.InfoWindow({ content: "Cargando..." });
        $.ajax({

            type: "POST",
            url: '@Url.Action("MapDetail","UserLogger")',



            datatype: "json",

            success: function (data) {

                for (var i = 0; i < data.length; i++) {

                    if (data[i].status == 1) {

                        var marker;

                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(data[i].latitude, data[i].longitute),
                            draggable: false,
                            map: googleMap,
                            icon: pendiente
                        });

                        google.maps.event.addListener(marker, 'click', function (marker, i) {
                            return function () {
                                infoWindow.setContent('<b> Ubicación : </b>' + data[i].logger_sites_name + '</p><b> Empresa : </b>' + data[i].logger_serial_number);
                                infoWindow.open(googleMap, marker);
                            }

                        }(marker, i));

                    }

                    else if (data[i].status == 2) {

                        var marker;

                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(data[i].latitude, data[i].longitute),
                            draggable: false,
                            map: googleMap,
                            icon: ejecucion
                        });

                        google.maps.event.addListener(marker, 'click', function (marker, i) {
                            return function () {
                                infoWindow.setContent('<b> Ubicación : </b>' + data[i].logger_sites_name + '</p><b> Empresa : </b>' + data[i].logger_serial_number);
                                infoWindow.open(googleMap, marker);
                            }

                        }(marker, i));



                    }

                    else if (data[i].status == 3) {

                        var marker;

                        marker = new google.maps.Marker({

                            position: new google.maps.LatLng(data[i].latitude, data[i].longitute),
                            draggable: false,
                            map: googleMap,
                            icon: instalado
                        });
                        google.maps.event.addListener(marker, 'click', function (marker, i) {
                            return function () {
                                infoWindow.setContent('<b> Ubicación : </b>' + data[i].logger_sites_name + '</p><b> Empresa : </b>' + data[i].logger_serial_number);
                                infoWindow.open(googleMap, marker);
                            }

                        }(marker, i));


                    }

                    else if (data[i].status == 4) {
                            var marker;

                            marker = new google.maps.Marker({
                                position: new google.maps.LatLng(data[i].latitude, data[i].longitute),
                                draggable: false,
                                map: googleMap,
                                icon: aprobado

                            });
                            google.maps.event.addListener(marker, 'click', function (marker, i) {
                                return function () {
                                    infoWindow.setContent('<b> Ubicación : </b>' + data[i].logger_sites_name + '</p><b> Empresa : </b>' + data[i].logger_serial_number);
                                    infoWindow.open(googleMap, marker);
                                }

                            }(marker, i));
                    }

                    else if (data[i].status == 5) {

                        var marker;
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(data[i].latitude, data[i].longitute),
                            draggable: false,
                            map: googleMap,
                            icon: nofuncionando
                        });
                        google.maps.event.addListener(marker, 'click', function (marker, i) {
                            return function () {
                                infoWindow.setContent('<b> Ubicación : </b>' + data[i].logger_sites_name + '</p><b> Empresa : </b>' + data[i].logger_serial_number);
                                infoWindow.open(googleMap, marker);
                            }

                        }(marker, i));
                    }

                    else if (data[i].status == 6) {

                        var marker;
                        marker = new google.maps.Marker({
                            position: new google.maps.LatLng(data[i].latitude, data[i].longitute),
                            draggable: false,
                            map: googleMap,
                            icon: noinstalado
                        });
                        google.maps.event.addListener(marker, 'click', function (marker, i) {
                            return function () {
                                infoWindow.setContent('<b> Ubicación : </b>' + data[i].logger_sites_name + '</p><b> Empresa : </b>' + data[i].logger_serial_number);
                                infoWindow.open(googleMap, marker);
                            }

                        }(marker, i));
                    }

                }

            }

        });


        googleMap.fitBounds(bounds);
        googleMap.setCenter(bounds.getCenter());

        googleMap.setZoom(10);

        var length = google.maps.geometry.spherical.computeLength(polyline.getPath());

        document.getElementById('length').innerHTML = "length=" + (length / 1000).toFixed(2) + " km";


    });

    function log(h) {
        document.getElementById("log").innerHTML += h + "<br />";
    }

    function onDataBound2(e) {
        var grid = $("#gridReady").data("kendoGrid");

        var gridData = grid.dataSource.view();
        var data = grid.dataSource.data();

        $(data).each(function (i, row) {
            var uno = "Pendiente";
            var dos = "En ejecución";
            var tres = "Instalado";
            var cuatro = "Aprobado";
            var cinco = "No Conectado";
            var seis = "No Instalado";

            // set on dataItem
            var currenvalue = this.status;
            var currentUid = gridData[i].uid;
            var currenRow = grid.table.find("tr[data-uid='" + currentUid + "']");
            var verButton = $(currenRow).find(".k-grid-View");
            var verButtonCorrection = $(currenRow).find(".k-grid-Corregir");

            if (currenvalue == 1) {
                this.set("status", uno);
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "Gold");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "Gold");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "Gold");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "Gold");

            } else if (currenvalue == 2) {
                this.set("status", dos)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "brown");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "brown");

            } else if (currenvalue == 3) {
                this.set("status", tres)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "blue");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "blue");

            } else if (currenvalue == 4) {
                this.set("status", cuatro)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "green");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "green");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "green");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "green");

            } else if(currenvalue == 5)  {
                this.set("status", cinco)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "orange");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "orange");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "orange");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "orange");
                
            
            } else if(currenvalue == 6)  {
                this.set("status", seis)
                $('tr[data-uid="' + row.uid + '"] td:nth-child(1)').css("color", "red");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(2)').css("color", "red");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("color", "red");
                $('tr[data-uid="' + row.uid + '"] td:nth-child(4)').css("color", "red");
                
            }

            //OCULTA BOTON APROBAR
            if (currenvalue == uno || currenvalue == dos || currenvalue == tres) {
                verButton.hide();
                verButtonCorrection.hide();
            }


        });


    }

    function ViewDetailStatus(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("DetailInstalation", "Status")?logger_id=" + stockReceiptId;
    }
    function ViewGeo(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var stockReceiptId = dataItem.logger_id;
        window.location.href = "@Url.Action("PreviewLoggerFree", "Status")?logger_id=" + stockReceiptId;
    }

</script>



<style type="text/css" media="screen">
    .k-i-excel {
        background-image: url('../../Content/images/table_excel.png');
        background-size: 20px 20px;
        background-position: left;
        background-repeat: no-repeat;
    }

    .pdf {
        background-image: url('../Content/images/30x30-pdf-icon.png');
        background-size: 20px 20px;
        background-position: left;
        background-repeat: no-repeat;
    }
</style>
